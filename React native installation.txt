https://github.com/gopinav/React-Tutorials/tree/master/React%20Fundamentals






1 -> Node, JDK   ->   https://chocolatey.org/install
			copy the command and paste it windows power shell in Run as administrative --> 
 Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))

2 -> again type choco like that
			PS C:\Windows\system32> choco

3 -> PS C:\Windows\system32> choco install -y nodejs-lts microsoft-openjdk17  install it
					
							choco install -y nodejs-lts microsoft-openjdk17

4 -> install node js

5 -> install jdk

6 -> install android

7 -> turn windows feature on or off
	check hyper v is on
tools -> SDK manager



Apk install in phone


1. command prompt run as admin

2. big step
change the edirectoring

C:\Windows\System32>cd  C:\Program Files\Java\jdk-17\bin



3. paste the key

		keytool -genkeypair -v -storetype PKCS12 -keystore my-upload-key.keystore -alias my-key-alias -keyalg RSA -keysize 2048 -validity 10000




Microsoft Windows [Version 10.0.22631.3447]
(c) Microsoft Corporation. All rights reserved.

C:\Windows\System32>keytool -genkeypair -v -storetype PKCS12 -keystore my-upload-key.keystore -alias my-key-alias -keyalg RSA -keysize 2048 -validity 10000
Enter keystore password:
Keystore password is too short - must be at least 6 characters
Enter keystore password:
Keystore password is too short - must be at least 6 characters
Enter keystore password:
Re-enter new password:
What is your first and last name?
  [Unknown]:  bala
What is the name of your organizational unit?
  [Unknown]:  macapp
What is the name of your organization?
  [Unknown]:  macapp
What is the name of your City or Locality?
  [Unknown]:  chennai
What is the name of your State or Province?
  [Unknown]:  tamil nadu
What is the two-letter country code for this unit?
  [Unknown]:  91
Is CN=bala, OU=macapp, O=macapp, L=chennai, ST=tamil nadu, C=91 correct?
  [no]:  yes

Generating 2,048 bit RSA key pair and self-signed certificate (SHA256withRSA) with a validity of 10,000 days
        for: CN=bala, OU=macapp, O=macapp, L=chennai, ST=tamil nadu, C=91
[Storing my-upload-key.keystore]

C:\Windows\System32>


5. get key as    my-upload-key.keystore you can also rename it

6. C:\Users\balam\OneDrive\Desktop\React_Native\TodoList\android\app      paste the keystore value in this folder

7. check in vscode the ketstore has been stored

8. setting up gradles variable

		MYAPP_UPLOAD_STORE_FILE=my-upload-key.keystore
MYAPP_UPLOAD_KEY_ALIAS=my-key-alias
MYAPP_UPLOAD_STORE_PASSWORD=*****
MYAPP_UPLOAD_KEY_PASSWORD=*****

paste in gradle.properties

9. Adding signing config to your app's Gradle config


paste on bundle.gradle in signConfigs postion

 release {
            if (project.hasProperty('MYAPP_UPLOAD_STORE_FILE')) {
                storeFile file(MYAPP_UPLOAD_STORE_FILE)
                storePassword MYAPP_UPLOAD_STORE_PASSWORD
                keyAlias MYAPP_UPLOAD_KEY_ALIAS
                keyPassword MYAPP_UPLOAD_KEY_PASSWORD
            }
        }


10. builTypes to there   signingConfig signingConfigs.debug this content  -->      signingConfig signingConfigs.release

11. cd android to change the directory

12. ./gradlew assembleRelease    run this line in terminal


C:\Users\balam\OneDrive\Desktop\React_Native\TodoList\android\app\src\main image


13. icon change on apk

C:\Users\balam\OneDrive\Desktop\React_Native\TodoList\android\app\src\main\res\mipmap-xxhdpi

metro

pending work

1. postman delete, put in  post method
2. useNavigation why i used
3.






android:usesCleartextTraffic="true"
      android:hardwareAccelerated="true"
      tools:replace="android:usesCleartextTraffic"





<manifest xmlns:android="http://schemas.android.com/apk/res/android">

    <uses-permission android:name="android.permission.INTERNET" />

    <application
      android:name=".MainApplication"
      android:label="@string/app_name"
      android:icon="@mipmap/ic_launcher"
      android:roundIcon="@mipmap/ic_launcher_round"
      android:allowBackup="false"
      android:theme="@style/AppTheme">
      <activity
        android:name=".MainActivity"
        android:label="@string/app_name"
        android:usesCleartextTraffic="true"
      android:hardwareAccelerated="true"
   
  
        android:configChanges="keyboard|keyboardHidden|orientation|screenLayout|screenSize|smallestScreenSize|uiMode"
        android:launchMode="singleTask"
        android:windowSoftInputMode="adjustResize"
        android:exported="true">
        <intent-filter>
            <action android:name="android.intent.action.MAIN" />
            <category android:name="android.intent.category.LAUNCHER" />
        </intent-filter>
      </activity>
    </application>
</manifest>

1. android:screenOrientation="portrait"
2. android:screenOrientation="landscape"
3. automatically resize android:configChanges="keyboard|keyboardHidden|screenLayout|screenSize|smallestScreenSize|uiMode" -> remove from orientation
   change the scenario based on android config orein and landscape , portrait
4. what is default orientation
5. for ios ?
6. 


        <Text style={{ color: 'black', backgroundColor: route.key === 'first' ? '#ff4081' : '#673ab7'  , width:route.key === 'first' ? 190 : 170 , height:50, marginTop:1, borderTopLeftRadius:50,borderTopRightRadius:50}}>
          {route.title}
        </Text>





import * as React from 'react';
import { View,Text, StyleSheet, Dimensions, StatusBar } from 'react-native';
import { TabView, SceneMap, TabBar } from 'react-native-tab-view';

const FirstRoute = () => (
  <View style={[styles.scene, { backgroundColor: '#ff4081' }]} />
);
const SecondRoute = () => (
  <View style={[styles.scene, { backgroundColor: '#673ab7' }]} />
);

export default function TabViewExample(){
  state = {
    index: 0,
    routes: [
      { key: 'first', title: 'Radio' },
      { key: 'second', title: 'Second' },
    ],
  };

  const renderTabBar = props => (
  
  <TabBar
    {...props}
style={{backgroundColor: 'green'}}
 tabStyle={({ route }) => ({
        backgroundColor: route.key === 'first' ? 'red' : 'green',
      })}
   
     renderLabel={({ route, focused }) => (
       <View style={{justifyContent:'center', alignItems:'center',marginBottom:-10,  backgroundColor: route.key === 'first' ? '#ff4081' : '#673ab7' ,width: 170 , height:40, marginTop:1, borderTopLeftRadius:focused?10:0 ,borderTopRightRadius:focused?10:0,
       borderBottomLeftRadius:focused?0:50,
       borderBottomRightRadius:focused?0:50,
        marginLeft:route.key === 'first'?40:-10}}>

<Text>{route.title}</Text>
        </View>
      )}
  />
);

 
    return (
      <TabView
        navigationState={state}
        renderScene={SceneMap({
          first: FirstRoute,
          second: SecondRoute,
        })}
        onIndexChange={index => this.setState({ index })}
        initialLayout={{ width: Dimensions.get('window').width }}
        style={styles.container}
        renderTabBar={renderTabBar}
      />
    );
  }


const styles = StyleSheet.create({
  container: {
    marginTop: StatusBar.currentHeight,
  },
  scene: {
    flex: 1,
  },
});


-----------------------------------------------------------------------
1. bar chart
2. pie chart
3. 
steps
	1.  npx --yes react-native@latest init Pie --version "latest"
	2. npm install
	3. npm install @react-native-community/cli-platform-android --save
	4. npx kill-port 3000
	5. 
------------------------------------------------------------